import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from scipy.stats import binom, norm
from mpl_toolkits.mplot3d import Axes3D  # For 3D plotting

# Set parameters for the binomial distributions
n_trials = 10  # Number of trials for each binomial distribution
p_success1 = 0.5  # Probability of success for the first binomial
p_success2 = 0.5  # Probability of success for the second binomial
num_samples = 5000  # Number of samples

# Define a range of positive and negative correlation values
correlation_values = [-0.8, -0.5, -0.3, 0.8]  # Negative and positive correlations included

# Calculate theoretical means
mean1 = n_trials * p_success1
mean2 = n_trials * p_success2

# Translation amounts (not used in this code snippet)
translation_x = -10
translation_y = -10

# Set up plot parameters for better visibility
sns.set(font_scale=1.2)  # Increase font size

# Create a figure for subplots
fig = plt.figure(figsize=(15, 12))

for i, corr in enumerate(correlation_values):
    # Generate correlated samples using copula with specified correlation
    normal_samples = np.random.multivariate_normal(
        [0, 0], [[1, corr], [corr, 1]], num_samples
    )
    u_samples = norm.cdf(normal_samples)

    # Generate binomial samples based on the copula-transformed data
    binom_samples1 = binom.ppf(u_samples[:, 0], n_trials, p_success1).astype(int)
    binom_samples2 = binom.ppf(u_samples[:, 1], n_trials, p_success2).astype(int)

    # Center the samples by subtracting the means
    binom_samples1_centered = binom_samples1 - mean1
    binom_samples2_centered = binom_samples2 - mean2

    # Create a 2D histogram for the joint distribution, with bins covering -10 to 10
    hist, x_edges, y_edges = np.histogram2d(
        binom_samples1_centered, binom_samples2_centered, bins=range(-10, 11)
    )

    # Prepare data for 3D bar plot
    xpos, ypos = np.meshgrid(
        x_edges[:-1] + 0.5, y_edges[:-1] + 0.5, indexing="ij"
    )  # Bin centers
    xpos = xpos.ravel()
    ypos = ypos.ravel()
    zpos = np.zeros_like(xpos)

    dx = dy = 1 * np.ones_like(zpos)  # Bin width
    dz = hist.ravel()  # Bin heights

    # Create 3D subplot
    ax = fig.add_subplot(2, 2, i + 1, projection='3d')
    ax.bar3d(xpos, ypos, zpos, dx, dy, dz, shade=True, color='blue')
    ax.set_title(
        f"3D Histogram of Centered Bivariate Binomial Distribution\n(Correlation={corr})",
        fontsize=14,
    )
    ax.set_xlabel("Centered Binomial Distribution 1", fontsize=12)
    ax.set_ylabel("Centered Binomial Distribution 2", fontsize=12)
    ax.set_zlabel("Frequency", fontsize=12)
    ax.view_init(elev=30, azim=225)  # Adjust view angle for better visualization

# Adjust layout for clear visualization
plt.tight_layout()
plt.show()
